name: node.12.app
# This workflow is triggered on pushes to the repository.

on:
  push:
    paths:
      - nodejs/12/app/**
      - .github/workflows/lang.node-12.app.yaml
  workflow_dispatch:
    inputs:
      push:
        description: Push to docker registry
        required: true
        default: false
        type: boolean

env:
  WORKSPACE: nodejs/12/app
  DOCKER_REPO: cloudkats
  DOCKER_IMAGE: node
  PURPOSE: app

jobs:
  buildonpush:
    name: BuildOnPush
    runs-on: ubuntu-latest
    if: >-
      github.event_name == 'workflow_dispatch' && github.event.inputs.push == 'true'
      || github.event_name == 'push' && (github.event.created == false && github.event.forced == false)
    steps:
      - uses: actions/checkout@v4.1.5

      - name: Build the Docker image
        working-directory: ${{ env.WORKSPACE }}
        run: |
          echo "Build"

          docker build . --file Dockerfile --tag image \
            --build-arg VERSION=$(cat version)

      - name: Login to Registry
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        working-directory: ${{ env.WORKSPACE }}
        run: |
          echo "Push"

          image_version=$(cat version)

          IMAGE_ID="${DOCKER_REPO}/${DOCKER_IMAGE}"
          tag_date="$(date +%Y%d%m)"

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          docker tag image "${IMAGE_ID}:latest"
          docker push "${IMAGE_ID}:latest"

          docker tag image "${IMAGE_ID}:${image_version}"
          docker push "${IMAGE_ID}:${image_version}"

          docker tag image "${IMAGE_ID}:${image_version}.${PURPOSE}.${GITHUB_SHA::8}"
          docker push "${IMAGE_ID}:${image_version}.${PURPOSE}.${GITHUB_SHA::8}"

          docker tag image "${IMAGE_ID}:${image_version}.${PURPOSE}.${tag_date}"
          docker push "${IMAGE_ID}:${image_version}.${PURPOSE}.${tag_date}"

          docker tag image "${IMAGE_ID}:${image_version}.${PURPOSE}"
          docker push "${IMAGE_ID}:${image_version}.${PURPOSE}"

          docker tag image "${IMAGE_ID}:${image_version::5}.${PURPOSE}"
          docker push "${IMAGE_ID}:${image_version::5}.${PURPOSE}"
